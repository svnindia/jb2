{
  "name": "jsontool",
  "description": "a 'json' command for massaging JSON on the command line",
  "version": "6.0.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/trentm/json.git"
  },
  "author": {
    "name": "Trent Mick",
    "email": "trentm@gmail.com",
    "url": "http://trentm.com"
  },
  "bin": {
    "json": "./lib/jsontool.js"
  },
  "main": "./lib/jsontool.js",
  "man": [
    "./man/man1/json.1"
  ],
  "scripts": {
    "test": "make test"
  },
  "engines": [
    "node >=0.4.0"
  ],
  "keywords": [
    "json",
    "jsontool",
    "filter",
    "command",
    "shell"
  ],
  "devDependencies": {
    "uglify-js": "1.1.x",
    "nodeunit": "0.7.x",
    "ansidiff": "1.0",
    "ben": "0.0.x",
    "async": "0.1.22",
    "semver": "1.1.0"
  },
  "contributors": [
    {
      "name": "Trent Mick",
      "email": "trentm@gmail.com",
      "url": "http://trentm.com"
    },
    {
      "name": "Yaniv Aknin",
      "url": "https://github.com/yaniv-aknin"
    },
    {
      "name": "Fred Kuo",
      "url": "https://github.com/fkuo"
    },
    {
      "name": "Bill Pijewski",
      "url": "https://github.com/pijewski"
    }
  ],
  "readme": "A \"json\" command for working with JSON on the command line. It is a\nsingle-file node.js script with no external deps (other than\n[node](https://github.com/joyent/node) itself). Here is a taste:\n\n    $ echo '{\"foo\":\"bar\"}' | json\n    {\n      \"foo\": \"bar\"\n    }\n    $ echo '{\"foo\":\"bar\"}' | json foo\n    bar\n\nUse it to:\n\n- pretty-print JSON to help read it\n- extract particular values (see `LOOKUPS` in usage)\n- get details on JSON syntax errors (handy for config files)\n- filter input JSON (see `-e` and `-c` options)\n\nFollow <a href=\"https://twitter.com/intent/user?screen_name=trentmick\" target=\"_blank\">@trentmick</a>\nfor updates to jsontool.\n\nSee <http://trentm.com/json> for full docs and many examples.\n\n\n# Installation\n\n1. Get [node](http://nodejs.org).\n\n2. `npm install -g jsontool`\n\n**OR manually**:\n\n2. Get the 'json' script and put it on your PATH somewhere (it is a single file\n   with no external dependencies). For example:\n\n        cd ~/bin\n        curl -L https://github.com/trentm/json/raw/master/lib/jsontool.js > json\n        chmod 755 json\n\nYou should now have \"json\" on your PATH:\n\n    $ json --version\n    json 3.1.2\n\n\n# Test suite\n\n    make test\n\nYou can also limit (somewhat) which tests are run with the `TEST_ONLY` envvar,\ne.g.:\n\n    cd test && TEST_ONLY=executable nodeunit test.js\n\nI test against node 0.4, 0.6, 0.7 and (occassionally) node master.\n\n\n# License\n\nMIT (see the fine LICENSE.txt file).\n\n\n# Command-Line Usage\n\n    <something generating JSON on stdout> | json [OPTIONS] [LOOKUPS...]\n    json -f FILE [OPTIONS] [LOOKUPS...]\n\nSee `json --help` output for full details.\n\n\n\n# Module Usage\n\nSince v1.3.1 you can use \"jsontool\" as a node.js module:\n\n    var jsontool = require('jsontool');\n\nHowever, so far the module API isn't that useful and the CLI is the primary\nfocus.\n\n\n# Alternatives you might prefer\n\n- json:select: <http://jsonselect.org/>\n- jsonpipe: <https://github.com/dvxhouse/jsonpipe>\n- json-command: <https://github.com/zpoley/json-command>\n- JSONPath: <http://goessner.net/articles/JsonPath/>, <http://code.google.com/p/jsonpath/wiki/Javascript>\n- jsawk: <https://github.com/micha/jsawk>\n- jshon: <http://kmkeen.com/jshon/>\n",
  "readmeFilename": "README.md",
  "_id": "jsontool@6.0.0",
  "_from": "jsontool@~6.0.0"
}
